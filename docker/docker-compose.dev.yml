# üê≥ TRIVANCE DEVELOPMENT ENVIRONMENT - Docker Compose
# Generated by Claude Code for Docker Evolution
# Optimized for: Hot-reload development with ‚â§2s cycle time

version: '3.9'

networks:
  trivance_dev:
    driver: bridge
    name: trivance_dev_network

volumes:
  postgres_dev_data:
    name: trivance_postgres_dev_data
  mongo_dev_data:
    name: trivance_mongo_dev_data

services:
  # ================================
  # DATABASE SERVICES
  # ================================
  postgres:
    image: postgres:15-alpine
    container_name: trivance_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: trivance_development
      POSTGRES_USER: trivance_dev
      POSTGRES_PASSWORD: trivance_dev_pass
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - trivance_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trivance_dev -d trivance_development"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  mongodb:
    image: mongo:7-jammy
    container_name: trivance_mongodb_dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: trivance_auth_development
    volumes:
      - mongo_dev_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - trivance_dev
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # ================================
  # APPLICATION SERVICES (HOT RELOAD)
  # ================================
  ms_level_up_management:
    build:
      context: ../../trivance_management
      target: development
    container_name: trivance_mgmt_dev
    restart: unless-stopped
    env_file:
      - ../../envs/local.management.env
    environment:
      # Docker stability (see docker/README.md for triple variable system)
      - NODE_ENV=production
      - APP_ENV=development
      - RUN_MODE=local
      # Override DB connections for Docker networking (MUST override env_file values)
      - DATABASE_URL=postgresql://trivance_dev:trivance_dev_pass@postgres:5432/trivance_development
      - DB_MONGO=mongodb://mongodb:27017/trivance_mgmt_development
      # Hot-reload optimization
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      # Logging
      - LOG_LEVEL=debug
    volumes:
      # HOT RELOAD MAGIC (only source files)
      - ../../trivance_management/src:/app/src:cached
      - ../../trivance_management/prisma:/app/prisma:cached
      - ../../trivance_management/test:/app/test:cached
      # Logs for observability
      - ../../logs:/app/logs
    ports:
      - "3000:3000"
      - "9229:9229"  # Debug port
    networks:
      trivance_dev:
        # Network alias para compatibilidad con UnifiedLogger de Auth Service
        # Auth espera 'trivance_management' pero el container es 'trivance_mgmt_dev'
        # Este alias permite que ambos nombres resuelvan al mismo servicio
        aliases:
          - trivance_management
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  ms_trivance_auth:
    build:
      context: ../../trivance_auth
      target: development
    container_name: trivance_auth_dev
    restart: unless-stopped
    env_file:
      - ../../envs/local.auth.env
    environment:
      # Docker stability (see docker/README.md for triple variable system)
      - NODE_ENV=production
      - APP_ENV=development
      - RUN_MODE=local
      # Override DB connection for Docker networking
      - DB_MONGO=mongodb://mongodb:27017/trivance_auth_development
      # Management API URL for unified logging (nombre del servicio en docker-compose)
      - MANAGEMENT_API_URL=http://ms_level_up_management:3000
      # Hot-reload optimization
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      # Logging
      - LOG_LEVEL=debug
    volumes:
      # HOT RELOAD MAGIC (only source files)
      - ../../trivance_auth/src:/app/src:cached
      - ../../trivance_auth/test:/app/test:cached
      # Logs for observability
      - ../../logs:/app/logs
    ports:
      - "3001:3001"
      - "9230:9229"  # Debug port (different from mgmt)
    networks:
      - trivance_dev
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # ================================
  # FRONTEND SERVICE
  # IMPORTANTE: Frontend usa PM2 para hot-reload nativo
  # Esta es la mejor pr√°ctica para desarrollo frontend
  # Ver: ecosystem.config.js en el root del workspace
  # ================================
  # Frontend NO se dockeriza en desarrollo por:
  # - Hot-reload m√°s r√°pido con PM2 + Vite nativo
  # - Mejor debugging con herramientas del browser
  # - Menor consumo de recursos
  # - Patr√≥n est√°ndar de la industria

  # ================================
  # OBSERVABILITY STACK
  # (Preserving existing infrastructure)
  # ================================
  log-viewer:
    build:
      context: ../../trivance-ai-orchestrator/tools/log-viewer
    container_name: trivance_log_viewer_dev
    restart: unless-stopped
    ports:
      - "4000:4000"
    volumes:
      - ../../logs:/logs:ro
    networks:
      - trivance_dev
    environment:
      - NODE_ENV=development
      - LOG_DIR=/logs

  dozzle:
    image: amir20/dozzle:latest
    container_name: trivance_dozzle_dev
    restart: unless-stopped
    ports:
      - "9999:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - trivance_dev
    environment:
      - DOZZLE_NO_ANALYTICS=true