{
  "cleanupPeriodDays": 7,
  "enableAllProjectMcpServers": true,
  "includeCoAuthoredBy": false,
  "model": "opusplan",

  "permissions": {
    "defaultMode": "bypassPermissions",
    "additionalDirectories": [],

    "allow": [
     "Read(**)",
      "Edit(**)",
      "MultiEdit(**)",
      "Write(**)",
      "Glob(**)",
      "Grep(**)",
      "LS(**)",
      "NotebookRead(**)",
      "NotebookEdit(**)",

      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",

      "Bash(npm ci)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run test:*)",
      "Bash(yarn :*)",
      "Bash(pnpm :*)",

      "Bash(python -m venv :*)",
      "Bash(pip install :*)",
      "Bash(node :*)",

      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:github.com)",

      "mcp__github__get_me",
      "mcp__github__get_pull_request",
      "mcp__github__get_pull_request_files",
      "mcp__github__get_pull_request_diff",
      "mcp__github__create_pending_pull_request_review",
      "mcp__github__add_comment_to_pending_review",
      "mcp__github__submit_pending_pull_request_review"
    ],
    "ask": [
      "Bash(git push:*)",
      "Bash(git rebase:*)",
      "Bash(git reset --hard:*)",

      "Bash(docker :*)",
      "Bash(kubectl :*)",
      "Bash(aws :*)",
      "Bash(gcloud :*)",
      "Bash(az :*)",
      "Bash(terraform :*)",
      "Bash(systemctl :*)"
    ],
    "deny": [
     "Bash(rm -rf /*)",
      "Bash(rm -rf :*)",
      "Bash(rm -rf ~/*)",
      "Bash(sudo:*)",
      "Bash(chown:*)",
      "Bash(chmod -R 777:*)",
      "Bash(dd if=:*)",
      "Bash(mkfs:*)",
      "Bash(diskutil :*)",
      "Bash(shutdown:*)",
      "Bash(reboot:*)",

      "Read(./.env)",
      "Read(./.env.*)",
      "Read(./secrets/**)",
      "Write(./.env)",
      "Write(./.env.*)",
      "Write(./secrets/**)"
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "npx -y ccstatusline@latest",
    "padding": 0
  },
  
  "hooks": {
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/scripts/hooks/ccnotify.py UserPromptSubmit"
          },
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/scripts/hooks/minimal_thinking.py"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/scripts/hooks/pre-tool-use.py"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/scripts/hooks/ccnotify.py Stop"
          }
        ]
      }
    ],
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/scripts/hooks/ccnotify.py Notification"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/scripts/hooks/security_guard.py"
          },
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/scripts/hooks/clean_code.py"
          }
        ]
      }
    ]
  }
}
