#!/usr/bin/env bash
set -e

# Validaciones de prerequisitos
command -v docker >/dev/null || { echo "‚ùå Docker no instalado: https://docker.com/get-started"; exit 1; }
docker info >/dev/null 2>&1 || { echo "‚ùå Docker no ejecut√°ndose. Iniciar Docker Desktop"; exit 1; }
command -v curl >/dev/null || { echo "‚ùå curl requerido para validaci√≥n"; exit 1; }

# Verificar que estamos en la ra√≠z del proyecto
if [[ ! -f ".claude/settings.json" ]]; then
    echo "‚ùå Ejecutar desde la ra√≠z del proyecto (donde est√° .claude/)"
    exit 1
fi

echo "‚ÑπÔ∏è  Configuraci√≥n GitHub MCP Server"
echo
echo "üîó Generar token: https://github.com/settings/tokens"
echo
echo "üîê Permisos requeridos (Classic Token):"
echo "   ‚úì repo (acceso completo a repositorios)"
echo "   ‚úì read:org (leer organizaci√≥n)"
echo "   ‚úì read:user (leer perfil usuario)"
echo "   ‚úì actions:read (leer GitHub Actions)"
echo
read -s -p "üîë Ingresa tu GitHub Personal Access Token: " GITHUB_TOKEN
echo

[[ -z "$GITHUB_TOKEN" ]] && { echo "‚ùå Token vac√≠o"; exit 1; }

echo
echo "üîé Validando token..."
HTTP_STATUS=$(curl -s -w "%{http_code}" --max-time 10 -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/user -o /dev/null 2>/dev/null)
if [[ "$HTTP_STATUS" != "200" ]]; then
    echo "‚ùå Token inv√°lido o sin permisos (HTTP $HTTP_STATUS)"
    echo "‚ÑπÔ∏è  Verificar que el token tenga todos los permisos requeridos"
    exit 1
fi
echo "‚úì Token v√°lido"

# Crear configuraci√≥n MCP
echo
echo "üîß Configurando MCP..."
cp .claude/mcp-servers/.mcp.example.json ./.mcp.json

# Reemplazar token en configuraci√≥n (compatible con macOS y Linux)
if command -v gsed >/dev/null; then
    gsed -i "s/github_pat_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/$GITHUB_TOKEN/g" ./.mcp.json
elif sed --version 2>/dev/null | grep -q GNU; then
    sed -i "s/github_pat_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/$GITHUB_TOKEN/g" ./.mcp.json
else
    sed -i '' "s/github_pat_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/$GITHUB_TOKEN/g" ./.mcp.json
fi

echo "‚úì Archivo .mcp.json creado"
echo "‚úì Token configurado correctamente"

echo
echo "üöÄ Configuraci√≥n completa"
echo "‚ö†Ô∏è  IMPORTANTE: Reinicia Claude Code para aplicar los cambios"
echo "‚ÑπÔ∏è  Verificar con: ls -la .mcp.json (debe existir en ra√≠z del proyecto)"